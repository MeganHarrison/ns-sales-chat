events {
    worker_connections 1024;
}

http {
    upstream sync_coordinator {
        # In production, this would proxy to actual Cloudflare Workers
        # For local development, we can mock or use ngrok tunnel
        server 127.0.0.1:8084 fail_timeout=5s max_fails=3;
    }

    upstream webhook_handler {
        server 127.0.0.1:8085 fail_timeout=5s max_fails=3;
    }

    upstream sync_worker {
        server 127.0.0.1:8086 fail_timeout=5s max_fails=3;
    }

    # Logging
    access_log /var/log/nginx/workers_access.log;
    error_log /var/log/nginx/workers_error.log;

    # Gzip compression
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;

    # Rate limiting for webhook endpoints
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            add_header Content-Type text/plain;
            return 200 "Workers Proxy OK";
        }

        # Sync Coordinator endpoints (OAuth, token management)
        location /sync-coordinator/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://sync_coordinator/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cloudflare Workers timeout settings
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            
            # Add CORS headers for browser requests
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Access-Control-Allow-Credentials true always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Webhook Handler endpoints (receive Keap webhooks)
        location /webhooks/ {
            limit_req zone=webhook burst=5 nodelay;
            
            # Only allow POST requests for webhooks
            if ($request_method != POST) {
                return 405;
            }
            
            proxy_pass http://webhook_handler/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Preserve original body for webhook signature verification
            proxy_set_header X-Original-Body $request_body;
            
            # Webhook timeout settings (Keap expects quick responses)
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 15s;
        }

        # Sync Worker endpoints (manual sync triggers)
        location /sync-worker/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://sync_worker/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for sync operations
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 300s; # 5 minutes for long sync operations
        }

        # Default error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # SSL termination server (for production with Let's Encrypt)
    server {
        listen 443 ssl http2;
        server_name sync.yourdomain.com;
        
        # SSL certificates (uncomment for production)
        # ssl_certificate /etc/letsencrypt/live/sync.yourdomain.com/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/sync.yourdomain.com/privkey.pem;
        
        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Same locations as HTTP server
        include /etc/nginx/conf.d/workers-locations.conf;
    }
}